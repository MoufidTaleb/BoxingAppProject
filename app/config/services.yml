# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    app.form.profile:
        class: TI\UserBundle\Form\UserType
        tags:
            - {name: form.type, alias: ti_userbundle_user }
    app.form.registration:
        class: TI\UserBundle\Form\RegistrationType
        tags:
        - {name: form.type, alias: ti_userbundle_user }

    fos_user.profile.controller:
        class: TI\UserBundle\Controller\ProfileController
        public: true
        arguments:
        - '@event_dispatcher'
        - '@fos_user.profile.form.factory'
        - '@fos_user.user_manager'
        calls:
        - [ 'setContainer', [ '@service_container' ]]

    ti_platform.antispam:
        class: TI\PlatformBundle\Antispam\Antispam
        arguments:
            - 50

    ti_platform.twig.antispam_extension:
        class: TI\PlatformBundle\Twig\AntispamExtension
        arguments:
            - "@ti_platform.antispam"
        tags:
            - { name: twig.extension }

    ti_platform.beta.html_adder:
        class: TI\PlatformBundle\Beta\BetaHTMLAdder

    ti_platform.eventlistener.listener:
        class: TI\PlatformBundle\EventListener\BetaListener
        arguments:
            - "@ti_platform.beta.html_adder"
            - "2019-09-01"
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: processBeta }


    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
